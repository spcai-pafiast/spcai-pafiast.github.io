"use strict";(self.webpackChunkgrc=self.webpackChunkgrc||[]).push([[3394],{3814:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>t});var r=i(5893),p=i(1151);const a={},l="Python API",s={id:"jarvis/jarvis-cd/python-api",title:"Python API",description:"This guide documents how to use Jarvis within a Python script. To this point,",source:"@site/docs/05-jarvis/02-jarvis-cd/07-python-api.md",sourceDirName:"05-jarvis/02-jarvis-cd",slug:"/jarvis/jarvis-cd/python-api",permalink:"/docs/jarvis/jarvis-cd/python-api",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Building a Package",permalink:"/docs/jarvis/jarvis-cd/building-package"},next:{title:"CM1",permalink:"/docs/jarvis/jarvis-cd/packages/cm1"}},o={},t=[{value:"Importing Jarvis CD",id:"importing-jarvis-cd",level:2},{value:"Creating a Pipeline",id:"creating-a-pipeline",level:2},{value:"Loading an Existing Pipeline",id:"loading-an-existing-pipeline",level:2},{value:"Append Pkgs to a Pipeline",id:"append-pkgs-to-a-pipeline",level:2},{value:"Configure a <code>Pkg</code> in the Pipeline",id:"configure-a-pkg-in-the-pipeline",level:2},{value:"Unlink/Remove <code>Pkg</code>s from a Pipeline",id:"unlinkremove-pkgs-from-a-pipeline",level:2},{value:"Run a Pipeline",id:"run-a-pipeline",level:2},{value:"Destroy a Pipeline",id:"destroy-a-pipeline",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,p.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"python-api",children:"Python API"}),"\n",(0,r.jsx)(n.p,{children:"This guide documents how to use Jarvis within a Python script. To this point,\r\nwe have demonstrated the Jarvis CLI. However, the Python API can be used\r\nfor building more complex benchmarks."}),"\n",(0,r.jsx)(n.h2,{id:"importing-jarvis-cd",children:"Importing Jarvis CD"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from jarvis_cd.basic.pkg import Pipeline\n"})}),"\n",(0,r.jsx)(n.h2,{id:"creating-a-pipeline",children:"Creating a Pipeline"}),"\n",(0,r.jsx)(n.p,{children:"To create a pipeline and save the environment for the pipeline:"}),"\n",(0,r.jsx)(n.p,{children:"USAGE:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"pipeline = Pipeline().create(pipeline_id).build_env().save()\n"})}),"\n",(0,r.jsx)(n.p,{children:"For example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"pipeline = Pipeline().create('gs-hermes').build_env().save()\n"})}),"\n",(0,r.jsxs)(n.p,{children:["NOTE: ",(0,r.jsx)(n.code,{children:"create()"})," will not override any data if the pipeline already exists."]}),"\n",(0,r.jsx)(n.h2,{id:"loading-an-existing-pipeline",children:"Loading an Existing Pipeline"}),"\n",(0,r.jsx)(n.p,{children:"USAGE:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"pipeline = Pipeline().load(pipeline_id=None)\n"})}),"\n",(0,r.jsx)(n.p,{children:"The following will load the currently-focused pipeline:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"pipeline = Pipeline().load()\n"})}),"\n",(0,r.jsx)(n.p,{children:"The following will load the pipeline with a particular name"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"pipeline = Pipeline().load('gs-hermes')\n"})}),"\n",(0,r.jsx)(n.h2,{id:"append-pkgs-to-a-pipeline",children:"Append Pkgs to a Pipeline"}),"\n",(0,r.jsx)(n.p,{children:"USAGE:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'pipeline.append(pkg_type, pkg_id=None, do_configure=True, **kwargs)\r\n"""\r\nCreate and append a pkg to the pipeline\r\n\r\n:param pkg_type: The type of pkg to create (e.g., OrangeFS)\r\n:param pkg_id: Semantic name of the pkg to create\r\n:param do_configure: Whether to configure while appending\r\n:param kwargs: Any parameters the user want to configure in the pkg\r\n:return: self\r\n"""\n'})}),"\n",(0,r.jsx)(n.p,{children:"The following will add Hermes to the pipeline with a sleep of 10"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"pipeline.append('hermes', 'sleep'=10)\r\npipeline.append('hermes_mpiio')\r\npipeline.append('gray_scott')\r\npipeline.save()\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"configure-a-pkg-in-the-pipeline",children:["Configure a ",(0,r.jsx)(n.code,{children:"Pkg"})," in the Pipeline"]}),"\n",(0,r.jsx)(n.p,{children:"USAGE:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"pkg = pipeline.get_pkg(pkg_id)\r\npkg.configure(**kwargs)\n"})}),"\n",(0,r.jsx)(n.p,{children:"For example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"pkg = pipline.get_pkg('hermes')\r\npkg.configure(sleep=5).save()\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"unlinkremove-pkgs-from-a-pipeline",children:["Unlink/Remove ",(0,r.jsx)(n.code,{children:"Pkg"}),"s from a Pipeline"]}),"\n",(0,r.jsx)(n.p,{children:"Unlink will simply remove the program from the Jarvis config, but not\r\ndestroy its contents. Unlinked pkgs can be re-linked using append without\r\nlosing the configuration data."}),"\n",(0,r.jsx)(n.p,{children:"Remove ereases the pkg from the filesystem entirely."}),"\n",(0,r.jsx)(n.p,{children:"USAGE:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"pipeline.remove(pkg_id).save()\r\npipeline.unlink(pkg_id).save()\n"})}),"\n",(0,r.jsx)(n.p,{children:"For example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"pipeline.remove('hermes').save()\n"})}),"\n",(0,r.jsx)(n.h2,{id:"run-a-pipeline",children:"Run a Pipeline"}),"\n",(0,r.jsx)(n.p,{children:"To run the Pipeline end-to-end:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"pipeline.run()\n"})}),"\n",(0,r.jsx)(n.h2,{id:"destroy-a-pipeline",children:"Destroy a Pipeline"}),"\n",(0,r.jsx)(n.p,{children:"To destroy a Pipeline:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"pipeline.destroy()\n"})})]})}function c(e={}){const{wrapper:n}={...(0,p.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>s,a:()=>l});var r=i(7294);const p={},a=r.createContext(p);function l(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(p):e.components||p:l(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);